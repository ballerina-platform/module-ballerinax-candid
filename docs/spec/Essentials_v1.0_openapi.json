{
  "openapi": "3.0.0",
  "info": {
    "title": "Essentials",
    "description": "Search GuideStarâ€™s most common set of data about nonprofits to quickly find organizations most relevant to your users, and use those results to get more data from our other APIs. API returns search result in JSON format.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.candid.org/essentials"
    },
    {
      "url": "https://apidata.guidestar.org/essentials"
    }
  ],
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/v1": {
      "post": {
        "summary": "/essentials/v1",
        "description": "Find nonprofits using variable search criteria and explore essential information.",
        "operationId": "essentials_v1",
        "requestBody": {
          "description": "Below JSON request body is an example showing all available elements. Please use the examples from the API Documentation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "application/x-www-form-urlencoded": {}
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EssentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/V1EssentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v2": {
      "post": {
        "summary": "/essentials/v2",
        "description": "Find nonprofits using variable search criteria and explore essential information.",
        "operationId": "essentials_v2",
        "requestBody": {
          "description": "Below JSON request body is an example showing all available elements. Please use the examples from the API Documentation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            },
            "application/x-www-form-urlencoded": {}
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2EssentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2EssentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v3": {
      "post": {
        "summary": "/essentials/v3",
        "description": "Make your searches more relevant and real-time with access to new filters and fields.",
        "operationId": "essentials_v3",
        "requestBody": {
          "description": "Below JSON request body is an example showing all available elements. Please use the examples from the API Documentation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V3Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/V3Query"
              }
            },
            "application/x-www-form-urlencoded": {}
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V3EssentialsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/V3EssentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/lookup": {
      "get": {
        "summary": "/essentials/lookup",
        "description": "Use the /lookup endpoint to retrieve a list of the tables that can be passed as a filter_name to the lookup detail endpoints. The tables and their contents can be used to generate dropdowns and filters in your system when using the Essentials API.",
        "operationId": "essentials_lookup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EssentialsLookupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/lookup/{filterName}": {
      "get": {
        "summary": "/essentials/lookup/{filter_name}",
        "description": "Provides a list of all the human-readable search values within a specific filter_name table, which can then be used in search queries with the Essentials endpoints. Each array contains a table key, name value, and search value. The resulting search_value(s) can be passed as search values in the Essentials API.",
        "operationId": "essentials_lookup_{filter_name}",
        "parameters": [
          {
            "name": "filterName",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "ntee_major",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EssentialsFilteredLookupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/lookup/{filterName}/{keyOrValue}": {
      "get": {
        "summary": "/essentials/lookup/{filter_name}/{key_or_value}",
        "description": "Lookup details on a specific filter using the known filter_name and key_or_value.  The resulting search_value can be passed as a search value in the Essentials API.",
        "operationId": "essentials_lookup_{filter_name}_{key_or_value}",
        "parameters": [
          {
            "name": "filterName",
            "in": "path",
            "description": "A list of all filters that can be used in Essentials endpoints. Found in the response of /essentials/lookup",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "ntee_major",
            "x-global": true
          },
          {
            "name": "keyOrValue",
            "in": "path",
            "description": "Key of filterable items. Found in the response of /essentials/lookup/{filter_name}",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "C00",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EssentialsFilteredLookupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "No Results Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptable"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Query": {
        "type": "object",
        "properties": {
          "search_terms": {
            "type": "string",
            "description": "Can be any string you'd like to search on, including EIN, organization name, keywords, etc",
            "example": "candid",
            "x-ballerina-name": "searchTerms"
          },
          "size": {
            "type": "integer",
            "description": "The maximum number of hits to be returned. Defaults to 25. The maximum number allowed is 25",
            "example": 25
          },
          "from": {
            "type": "integer",
            "description": "The offset from the first result. Defaults to 0",
            "example": 0
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          }
        }
      },
      "OrganizationFilter": {
        "type": "object",
        "properties": {
          "bmf_status": {
            "type": "boolean",
            "description": "Flag indicating the organization has the most recent IRS BMF. Defaults to null. Otherwise true or false",
            "example": true,
            "x-ballerina-name": "bmfStatus"
          },
          "affiliation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AffiliationTypeFilter"
              }
            ],
            "x-ballerina-name": "affiliationType"
          },
          "specific_exclusions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SpecificExclusionsFilter"
              }
            ],
            "x-ballerina-name": "specificExclusions"
          },
          "number_of_employees_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "numberOfEmployeesRange"
          },
          "profile_levels": {
            "type": "array",
            "description": "GuideStar seal levels, comma separated",
            "items": {
              "type": "string",
              "example": "platinum"
            },
            "enum": [
              "bronze",
              "silver",
              "gold",
              "platinum"
            ],
            "x-ballerina-name": "profileLevels"
          },
          "ntee_minor_codes": {
            "type": "array",
            "description": "National Taxonomy of Exempt Entities (NTEE) minor codes, comma separated",
            "items": {
              "type": "string",
              "example": "50"
            },
            "x-ballerina-name": "nteeMinorCodes"
          },
          "subsection_codes": {
            "type": "array",
            "description": "IRS subsection codes and/or descriptions, comma separated",
            "items": {
              "type": "string",
              "example": "501(c)(3) Public Charity"
            },
            "x-ballerina-name": "subsectionCodes"
          },
          "ntee_major_codes": {
            "type": "array",
            "description": "National Taxonomy of Exempt Entities (NTEE) major codes, comma separated",
            "items": {
              "type": "string",
              "example": "T"
            },
            "x-ballerina-name": "nteeMajorCodes"
          },
          "foundation_codes": {
            "type": "array",
            "description": "Foundation codes and/or descriptions, comma separated",
            "items": {
              "type": "string",
              "example": "15"
            },
            "x-ballerina-name": "foundationCodes"
          },
          "pub78_verified": {
            "type": "boolean",
            "description": "Flag indicating the organization is pub78 verified. Value set as true or false",
            "example": true,
            "x-ballerina-name": "pub78Verified"
          },
          "form_types": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IrsFormTypesFilter"
              }
            ],
            "x-ballerina-name": "formTypes"
          },
          "audits": {
            "$ref": "#/components/schemas/AuditsFilter"
          }
        }
      },
      "V3FinancialsFilter": {
        "type": "object",
        "properties": {
          "a_133_audit_performed": {
            "type": "boolean",
            "description": "Flag indicating the organization performed A-133 audit. Value set as true or false",
            "example": false,
            "x-ballerina-name": "a133AuditPerformed"
          },
          "required_to_file_990t": {
            "type": "boolean",
            "description": "Flag indicating the organization is required to file a 990-T. Value set as true or false",
            "example": false,
            "x-ballerina-name": "requiredToFile990t"
          },
          "most_recent_year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3FinancialsFilterMostRecentYear"
              }
            ],
            "x-ballerina-name": "mostRecentYear"
          }
        }
      },
      "V3OrgProperties": {
        "type": "object",
        "properties": {
          "bmf_status": {
            "type": "boolean",
            "description": "Flag indicating the organization has the most recent IRS BMF. Defaults to null. Otherwise true or false",
            "example": true,
            "x-ballerina-name": "bmfStatus"
          },
          "exclude_defunct_or_merged_organizations": {
            "type": "boolean",
            "description": "Flag to exclude defunct or merged organizations. Value set as true or false",
            "example": false,
            "x-ballerina-name": "excludeDefunctOrMergedOrganizations"
          },
          "relationship_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AffiliationTypeFilter"
              }
            ],
            "x-ballerina-name": "relationshipType"
          },
          "exclude_revoked_organizations": {
            "type": "boolean",
            "description": "Flag to exclude revoked organizations. Value set as true or false",
            "example": false,
            "x-ballerina-name": "excludeRevokedOrganizations"
          },
          "pub78_verified": {
            "type": "boolean",
            "description": "Flag indicating the organization is pub78 verified. Value set as true or false",
            "example": true,
            "x-ballerina-name": "pub78Verified"
          },
          "allow_online_giving": {
            "type": "boolean",
            "description": "Flag indicating the organization allows online giving. Value set as true or false",
            "example": true,
            "x-ballerina-name": "allowOnlineGiving"
          },
          "dei_submitted": {
            "type": "boolean",
            "description": "Flag indicating the organization has submitted demographics information. Value set as true or false",
            "example": false,
            "x-ballerina-name": "deiSubmitted"
          }
        }
      },
      "V3EssentialsResponseDates": {
        "type": "object",
        "properties": {
          "seal_last_modified": {
            "type": "string",
            "description": "Date when Candid seal status was last modified",
            "example": "2020-01-01T01:01:01:01.000Z",
            "x-ballerina-name": "sealLastModified"
          },
          "financials_last_modified": {
            "type": "string",
            "description": "Datetime of last update to organization's financial information",
            "example": "2020-01-01T01:01:01:01.000Z",
            "x-ballerina-name": "financialsLastModified"
          },
          "dei_last_modified": {
            "type": "string",
            "description": "Datetime of last update to organization demographics information",
            "example": "2020-01-01T01:01:01:01.000Z",
            "x-ballerina-name": "deiLastModified"
          },
          "profile_last_modified": {
            "type": "string",
            "description": "Datetime of last update to Candid profile",
            "example": "2020-01-01T01:01:01:01.000Z",
            "x-ballerina-name": "profileLastModified"
          },
          "last_published": {
            "type": "string",
            "description": "Datetime of organization's last publication",
            "example": "2020-01-01T01:01:01:01.000Z",
            "x-ballerina-name": "lastPublished"
          }
        }
      },
      "NumberRangeFilter": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "Minimum number",
            "example": 5
          },
          "max": {
            "type": "integer",
            "description": "Maximum number",
            "example": 987654321
          }
        }
      },
      "V2EssentialsResponseDataHits": {
        "type": "object",
        "properties": {
          "parent_orgs": {
            "type": "string",
            "description": "Names of parent organizations, comma seperated",
            "example": "Parent Org, Parent Org 2",
            "x-ballerina-name": "parentOrgs"
          },
          "contact_phone": {
            "type": "string",
            "description": "Phone number of the primary contact at the organization",
            "example": "(555) 111-5555",
            "x-ballerina-name": "contactPhone"
          },
          "city": {
            "type": "string",
            "description": "City of the organization's address",
            "example": "Chicago"
          },
          "logo_url": {
            "type": "string",
            "description": "URL for the organization's logo",
            "example": "candid.org",
            "x-ballerina-name": "logoUrl"
          },
          "lat_long": {
            "type": "string",
            "description": "latitude and longitude of the organization's adress",
            "example": "40.9052,-89.5866",
            "x-ballerina-name": "latLong"
          },
          "county": {
            "type": "string",
            "description": "County of the organization's address",
            "example": "Peoria, IL"
          },
          "ein": {
            "type": "string",
            "description": "Employer Identification Number",
            "example": "82-4267025"
          },
          "form_type": {
            "type": "string",
            "description": "Tax form filing type. ",
            "example": "990",
            "x-ballerina-name": "formType"
          },
          "form990_total_expenses": {
            "type": "string",
            "description": "Total expenses filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "22224499",
            "x-ballerina-name": "form990TotalExpenses"
          },
          "contact_email": {
            "type": "string",
            "description": "Email of the primary contact at the organization",
            "example": "help@orgname.org",
            "x-ballerina-name": "contactEmail"
          },
          "profile_level": {
            "type": "string",
            "description": "GuideStar seal levels",
            "example": "BRONZE",
            "enum": [
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "NONE"
            ],
            "x-ballerina-name": "profileLevel"
          },
          "subsection_code": {
            "type": "string",
            "description": "IRS subsection code of the organization",
            "example": "501(c)(3) Public Charity",
            "x-ballerina-name": "subsectionCode"
          },
          "address_line_1": {
            "type": "string",
            "description": "Address line 1 of the organization",
            "example": "123 West 1st Street",
            "x-ballerina-name": "addressLine1"
          },
          "address_line_2": {
            "type": "string",
            "description": "Address line 2 of the organization",
            "example": "Suite 201",
            "x-ballerina-name": "addressLine2"
          },
          "state": {
            "type": "string",
            "description": "State (Abbreviation) of the organization's address",
            "example": "IL"
          },
          "form990_total_revenue": {
            "type": "string",
            "description": "Total revenue filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "2349999",
            "x-ballerina-name": "form990TotalRevenue"
          },
          "also_known_as": {
            "type": "string",
            "description": "Organization name Also Known As",
            "example": "chillicothe rugby football club",
            "x-ballerina-name": "alsoKnownAs"
          },
          "zip": {
            "type": "string",
            "description": "Zip code of the organization's address",
            "example": "23185"
          },
          "contact_name": {
            "type": "string",
            "description": "Name of the primary contact at the organization",
            "example": "John Smith",
            "x-ballerina-name": "contactName"
          },
          "public_report": {
            "type": "string",
            "description": "GuideStar's public profile URL",
            "example": "https://www.guidestar.org/profile/82-4267025",
            "x-ballerina-name": "publicReport"
          },
          "bmf_gross_receipts": {
            "type": "string",
            "description": "Gross receipts of the organization reported on the BMF",
            "example": "2349999",
            "x-ballerina-name": "bmfGrossReceipts"
          },
          "organization_name": {
            "type": "string",
            "description": "The public name recognized by the IRS",
            "example": "Illinois Youth Rugby Association",
            "x-ballerina-name": "organizationName"
          },
          "ntee_code": {
            "type": "string",
            "description": "National Taxonomy of Exempt Entities",
            "example": "N60 Amateur Sports Clubs, Leagues, N.E.C.",
            "x-ballerina-name": "nteeCode"
          },
          "mission": {
            "type": "string",
            "description": "Mission statement for the organization",
            "example": "To assist those in need"
          },
          "number_of_employees": {
            "type": "string",
            "description": "Number of employees at the organization",
            "example": "55",
            "x-ballerina-name": "numberOfEmployees"
          },
          "website_url": {
            "type": "string",
            "description": "URL for the organization's website",
            "example": "candid.org",
            "x-ballerina-name": "websiteUrl"
          },
          "organization_id": {
            "type": "string",
            "description": "A unique number identifying organizations and organizational entities",
            "example": "9938979",
            "x-ballerina-name": "organizationId"
          },
          "bridge_id": {
            "type": "string",
            "description": "Deprecated Bridge ID",
            "x-ballerina-name": "bridgeId",
            "example": null
          },
          "msa": {
            "type": "string",
            "description": "Metropolitan statistical area of the organization's adresss",
            "example": "IL - Peoria-Pekin"
          },
          "form990_total_assets": {
            "type": "string",
            "description": "Total assets filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "12348855",
            "x-ballerina-name": "form990TotalAssets"
          },
          "contact_title": {
            "type": "string",
            "description": "Title of the primary contact at the organization",
            "example": "Support Lead",
            "x-ballerina-name": "contactTitle"
          },
          "foundation_code": {
            "type": "string",
            "description": "Foundation code that describes the organization",
            "example": "15",
            "x-ballerina-name": "foundationCode"
          },
          "properties": {
            "$ref": "#/components/schemas/V1EssentialsResponseDataProperties"
          },
          "bmf_assets": {
            "type": "string",
            "description": "Assets of the organization reported on the BMF",
            "example": "1849900",
            "x-ballerina-name": "bmfAssets"
          }
        }
      },
      "V3EssentialsResponseHits": {
        "type": "object",
        "properties": {
          "financials": {
            "$ref": "#/components/schemas/V3EssentialsResponseFinancials"
          },
          "taxonomies": {
            "$ref": "#/components/schemas/V3EssentialsResponseTaxonomies"
          },
          "geography": {
            "$ref": "#/components/schemas/V3EssentialsResponseGeography"
          },
          "organization": {
            "$ref": "#/components/schemas/V3EssentialsResponseOrganization"
          },
          "dates": {
            "$ref": "#/components/schemas/V3EssentialsResponseDates"
          },
          "properties": {
            "$ref": "#/components/schemas/V3EssentialsResponseProperties"
          }
        }
      },
      "GeographyFilter": {
        "type": "object",
        "properties": {
          "zip": {
            "type": "string",
            "description": "Five digit ZIP code",
            "example": "10005"
          },
          "city": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "US cities, comma separated",
              "example": "New York"
            }
          },
          "county": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "US counties, comma separated",
              "example": "New York, NY"
            }
          },
          "msa": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Metropolitan statistical area, comma separated",
              "example": "NY-NJ"
            }
          },
          "state": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "State code, comma separated",
              "example": "NY"
            }
          },
          "radius": {
            "type": "integer",
            "description": "Radius from the specified ZIP code in miles. Allowed range is between 1 and 50 miles. Values exceeding 50 will default to a radius of 50 miles",
            "example": 50
          }
        }
      },
      "IrsFormTypesFilter": {
        "type": "object",
        "properties": {
          "f990ez": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990 EZ. Value set as true or false",
            "example": false
          },
          "f990": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990. Value set as true or false",
            "example": true
          },
          "required_to_file_990t": {
            "type": "boolean",
            "description": "Flag indicating the organization is required to file a 990-T. Value set as true or false",
            "example": false,
            "x-ballerina-name": "requiredToFile990t"
          },
          "f990pf": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990-PF. Value set as true or false",
            "example": false
          },
          "f990n": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990N. Value set as true or false",
            "example": false
          }
        }
      },
      "Filters": {
        "type": "object",
        "properties": {
          "financials": {
            "$ref": "#/components/schemas/FinancialsFilter"
          },
          "geography": {
            "$ref": "#/components/schemas/GeographyFilter"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationFilter"
          }
        }
      },
      "V3EssentialsResponseGeography": {
        "type": "object",
        "properties": {
          "zip": {
            "description": "Zip code of the organization's address",
            "example": 10005,
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "congressional_district": {
            "type": "string",
            "description": "Congressional district of the organization's address",
            "example": "District 45, CA",
            "x-ballerina-name": "congressionalDistrict"
          },
          "city": {
            "type": "string",
            "description": "City of the organization's address",
            "example": "New York"
          },
          "latitude": {
            "type": "number",
            "description": "latitude of the organization's adress",
            "example": 40.9052
          },
          "address_line_1": {
            "type": "string",
            "description": "Address line 1 of the organization",
            "example": "1 Financial Sq",
            "x-ballerina-name": "addressLine1"
          },
          "county": {
            "type": "string",
            "description": "County of the organization's address",
            "example": "Peoria, IL"
          },
          "msa": {
            "type": "string",
            "description": "Metropolitan statistical area of the organization's adresss",
            "example": "IL - Peoria-Pekin"
          },
          "address_line_2": {
            "type": "string",
            "description": "Address line 2 of the organization",
            "example": "Floor 24",
            "x-ballerina-name": "addressLine2"
          },
          "state": {
            "type": "string",
            "description": "State (Abbreviation) of the organization's address",
            "example": "NY"
          },
          "longitude": {
            "type": "number",
            "description": "longitude of the organization's adress",
            "example": -89.5866
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sort_by": {
            "type": "string",
            "description": "Leave blank to sort by relevance",
            "example": "organization_name",
            "enum": [
              "organization_name",
              "bmf_gross_receipts",
              "bmf_assets"
            ],
            "x-ballerina-name": "sortBy"
          },
          "ascending": {
            "type": "boolean",
            "description": "Default value is true (ascending). Set to false to sort by descending value",
            "example": true
          }
        }
      },
      "V3FinancialsFilterMostRecentYearFormTypes": {
        "type": "object",
        "properties": {
          "f990ez": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990ez. Value set as true or false",
            "example": true
          },
          "f990": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990. Value set as true or false",
            "example": true
          },
          "f990pf": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990-PF. Value set as true or false",
            "example": false
          },
          "f990n": {
            "type": "boolean",
            "description": "Flag indicating the organization files a form 990n. Value set as true or false",
            "example": false
          }
        }
      },
      "V3EssentialsResponseOrganization": {
        "type": "object",
        "properties": {
          "also_known_as": {
            "type": "string",
            "description": "Organization name Also Known As",
            "example": "Foundation Center, Guidestar",
            "x-ballerina-name": "alsoKnownAs"
          },
          "contact_name": {
            "type": "string",
            "description": "Name of the primary contact at the organization",
            "example": "John smith",
            "x-ballerina-name": "contactName"
          },
          "contact_phone": {
            "type": "string",
            "description": "Phone number of the primary contact at the organization",
            "example": "(555) 111-5555",
            "x-ballerina-name": "contactPhone"
          },
          "logo_url": {
            "type": "string",
            "description": "URL for the organization's logo",
            "example": "candid.org",
            "x-ballerina-name": "logoUrl"
          },
          "leader_name": {
            "type": "string",
            "description": "Name of leader",
            "example": "Ann Mei Chang",
            "x-ballerina-name": "leaderName"
          },
          "ruling_year": {
            "type": "number",
            "description": "The year the IRS granted organization tax exempt status (a.k.a. Ruling Year)",
            "example": 2019,
            "x-ballerina-name": "rulingYear"
          },
          "profile_year": {
            "type": "number",
            "description": "GuideStar seal year",
            "example": 2020,
            "x-ballerina-name": "profileYear"
          },
          "ein": {
            "type": "string",
            "description": "Employer Identification Number",
            "example": "39-1731296"
          },
          "organization_name": {
            "type": "string",
            "description": "The public name recognized by the IRS",
            "example": "Candid",
            "x-ballerina-name": "organizationName"
          },
          "leader_title": {
            "type": "string",
            "description": "Leader's title",
            "example": "CEO",
            "x-ballerina-name": "leaderTitle"
          },
          "profile_logo": {
            "type": "string",
            "description": "GuideStar's seal logo",
            "example": "https://www.guidestar.org/App_Themes/MainSite2/images/ProfilePageSvgs/profile-PLATINUM2021-seal.svg",
            "x-ballerina-name": "profileLogo"
          },
          "contact_email": {
            "type": "string",
            "description": "Email of the primary contact at the organization",
            "example": "help@orgnam.org",
            "x-ballerina-name": "contactEmail"
          },
          "profile_level": {
            "type": "string",
            "description": "GuideStar seal level",
            "example": "Platinum",
            "x-ballerina-name": "profileLevel"
          },
          "mission": {
            "type": "string",
            "description": "Mission statement for the organization",
            "example": "Get you the information to do good"
          },
          "number_of_employees": {
            "description": "Number of employees at the organization",
            "example": 55,
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "x-ballerina-name": "numberOfEmployees"
          },
          "website_url": {
            "type": "string",
            "description": "URL for the organization's website",
            "example": "candid.org",
            "x-ballerina-name": "websiteUrl"
          },
          "organization_id": {
            "type": "string",
            "description": "A unique number identifying organizations and organizational entities",
            "example": "7578046",
            "x-ballerina-name": "organizationId"
          },
          "group_exemption": {
            "type": "string",
            "description": "Four-digit number assigned to a group of organizations falling under a central/parent organization holding group exemption letters",
            "example": "3297",
            "x-ballerina-name": "groupExemption"
          },
          "contact_title": {
            "type": "string",
            "description": "Title of the primary contact at the organization",
            "example": "Support lead",
            "x-ballerina-name": "contactTitle"
          },
          "profile_link": {
            "type": "string",
            "description": "GuideStar's public profile URL",
            "example": "https://www.guidestar.org/profile/82-4267025",
            "x-ballerina-name": "profileLink"
          }
        }
      },
      "LastUpdated": {
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "A filter, along with start_date, defines a range on date_type, in the format yyyy-MM-ddTHH:mm:ss",
            "example": "2020-01-01T01:01:01:01",
            "x-ballerina-name": "endDate"
          },
          "date_type": {
            "type": "string",
            "description": "A filter, to specify updates made to a organization over the specified end_date and start_date",
            "example": "seal_last_modified",
            "enum": [
              "seal_last_modified",
              "profile_last_modified",
              "dei_last_modified",
              "financials_last_modified",
              "last_modified"
            ],
            "x-ballerina-name": "dateType"
          },
          "start_date": {
            "type": "string",
            "description": "A filter, along with end_date, defines a range on date_type, in the format yyyy-MM-ddTHH:mm:ss",
            "example": "2020-01-01T01:01:01:01",
            "x-ballerina-name": "startDate"
          }
        }
      },
      "EssentialsFilteredLookupResponse": {
        "type": "object",
        "properties": {
          "took": {
            "type": "integer",
            "example": 20
          },
          "code": {
            "type": "integer",
            "description": "HTTP response status code",
            "example": 200
          },
          "data": {
            "type": "array",
            "description": "A list of all the tables used as a filter_name with the Essentials Lookup endpoints",
            "items": {
              "$ref": "#/components/schemas/EssentialsFilteredLookupResponseData"
            }
          },
          "message": {
            "type": "string",
            "example": "Request was processed successfully!"
          },
          "errors": {
            "type": "array",
            "example": [],
            "items": {
              "type": "string",
              "description": "error messaging"
            }
          }
        }
      },
      "V3FinancialsFilterMostRecentYear": {
        "type": "object",
        "properties": {
          "total_assets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalAssets"
          },
          "total_revenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalRevenue"
          },
          "form_types": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3FinancialsFilterMostRecentYearFormTypes"
              }
            ],
            "x-ballerina-name": "formTypes"
          },
          "total_expenses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalExpenses"
          }
        }
      },
      "V3EssentialsResponseTaxonomies": {
        "type": "object",
        "properties": {
          "subsection_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3EssentialsResponseTaxonomiesSubsectionCode"
              }
            ],
            "x-ballerina-name": "subsectionCode"
          },
          "population_served_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V3EssentialsResponseTaxonomiesPopulationServedCodes"
            },
            "x-ballerina-name": "populationServedCodes"
          },
          "ntee_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V3EssentialsResponseTaxonomiesNteeCodes"
            },
            "x-ballerina-name": "nteeCodes"
          },
          "foundation_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3EssentialsResponseTaxonomiesFoundationCode"
              }
            ],
            "x-ballerina-name": "foundationCode"
          },
          "subject_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V3EssentialsResponseTaxonomiesSubjectCodes"
            },
            "x-ballerina-name": "subjectCodes"
          }
        }
      },
      "V3Query": {
        "type": "object",
        "properties": {
          "search_terms": {
            "type": "string",
            "description": "Can be any string you'd like to search on, including EIN, organization name, keywords, etc",
            "example": "candid",
            "x-ballerina-name": "searchTerms"
          },
          "size": {
            "type": "integer",
            "description": "The maximum number of hits to be returned. Defaults to 25. The maximum number allowed is 25",
            "example": 25
          },
          "from": {
            "type": "integer",
            "description": "The offset from the first result. Defaults to 0",
            "example": 0
          },
          "sort": {
            "$ref": "#/components/schemas/V3Sort"
          },
          "filters": {
            "$ref": "#/components/schemas/V3Filters"
          }
        }
      },
      "V3EssentialsResponseTaxonomiesSubjectCodes": {
        "type": "object",
        "properties": {
          "subject_code": {
            "type": "string",
            "description": "Subject code",
            "example": "SP030000",
            "x-ballerina-name": "subjectCode"
          },
          "subject_code_description": {
            "type": "string",
            "description": "Description of subject code",
            "example": "SP030000",
            "x-ballerina-name": "subjectCodeDescription"
          }
        }
      },
      "V3EssentialsResponseTaxonomiesSubsectionCode": {
        "type": "object",
        "properties": {
          "subsection_code": {
            "type": "string",
            "description": "IRS subsection code of the organization",
            "example": "03",
            "x-ballerina-name": "subsectionCode"
          },
          "subsection_code_description": {
            "type": "string",
            "description": "Description of IRS subsection code",
            "example": "501(c)(3) Public Charity",
            "x-ballerina-name": "subsectionCodeDescription"
          }
        }
      },
      "V3EssentialsResponsePropertiesRelationshipType": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "boolean",
            "description": "If the organization is a parent",
            "example": true
          },
          "headquarters": {
            "type": "boolean",
            "description": "If the organization is a national headquarter",
            "example": true
          },
          "subordinate": {
            "type": "boolean",
            "description": "If the organization is a subordinate",
            "example": false
          },
          "independent": {
            "type": "boolean",
            "description": "If the organization is independent",
            "example": false
          }
        }
      },
      "AffiliationTypeFilter": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "boolean",
            "description": "Flag indicating the organization is a parent. Value set as true or false",
            "example": false
          },
          "subordinate": {
            "type": "boolean",
            "description": "Flag indicating the organization is a subordinate. Value set as true or false",
            "example": false
          },
          "independent": {
            "type": "boolean",
            "description": "Flag indicating the organization is independent. Value set as true or false",
            "example": true
          },
          "headquarter": {
            "type": "boolean",
            "description": "Flag indicating the organization is a headquarter. Value set as true or false",
            "example": false
          }
        }
      },
      "V3EssentialsResponseTaxonomiesFoundationCode": {
        "type": "object",
        "properties": {
          "foundation_code_description": {
            "type": "string",
            "description": "Description of foundation code",
            "example": "50% tax deductible",
            "x-ballerina-name": "foundationCodeDescription"
          },
          "foundation_code": {
            "type": "string",
            "description": "Foundation code that describes the organization",
            "example": "15",
            "x-ballerina-name": "foundationCode"
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "400"
          },
          "message": {
            "type": "string",
            "example": "The request cannot be fulfilled due to bad syntax."
          }
        }
      },
      "V2EssentialsResponseData": {
        "type": "object",
        "properties": {
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V2EssentialsResponseDataHits"
            }
          },
          "took": {
            "type": "integer",
            "description": "Elapsed time to calculate results",
            "example": 22
          },
          "total_hits": {
            "type": "integer",
            "description": "Number of results returned by search",
            "example": 1,
            "x-ballerina-name": "totalHits"
          }
        }
      },
      "V1EssentialsResponseDataProperties": {
        "type": "object",
        "properties": {
          "bmf_status": {
            "type": "boolean",
            "description": "If the organization is present on the BMF",
            "example": true,
            "x-ballerina-name": "bmfStatus"
          },
          "parent": {
            "type": "boolean",
            "description": "If the organization is a parent",
            "example": true
          },
          "defuncted_or_merged": {
            "type": "boolean",
            "description": "If the organization is defuncted or merged",
            "example": false,
            "x-ballerina-name": "defunctedOrMerged"
          },
          "subordinate": {
            "type": "boolean",
            "description": "If the organization is a subordinate",
            "example": false
          },
          "independent": {
            "type": "boolean",
            "description": "If the organization is independent",
            "example": false
          },
          "pub78_verified": {
            "type": "boolean",
            "description": "If the organization is Pub78 verified",
            "example": true,
            "x-ballerina-name": "pub78Verified"
          },
          "audit_a133_performed": {
            "type": "boolean",
            "description": "If the organization performed a A-133 audit",
            "example": true,
            "x-ballerina-name": "auditA133Performed"
          },
          "allow_online_giving": {
            "type": "boolean",
            "description": "If the organization allows online giving",
            "example": true,
            "x-ballerina-name": "allowOnlineGiving"
          },
          "revoked": {
            "type": "boolean",
            "description": "If the organization is revoked",
            "example": false
          },
          "national_hq": {
            "type": "boolean",
            "description": "If the organization is a national headquarter",
            "example": true,
            "x-ballerina-name": "nationalHq"
          }
        }
      },
      "V3Filters": {
        "type": "object",
        "properties": {
          "financials": {
            "$ref": "#/components/schemas/V3FinancialsFilter"
          },
          "last_updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LastUpdated"
              }
            ],
            "x-ballerina-name": "lastUpdated"
          },
          "geography": {
            "$ref": "#/components/schemas/GeographyFilter"
          },
          "organization": {
            "$ref": "#/components/schemas/V3OrganizationFilter"
          }
        }
      },
      "NotAcceptable": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "406"
          },
          "message": {
            "type": "string",
            "example": "The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request."
          }
        }
      },
      "V1EssentialsResponseDataHits": {
        "type": "object",
        "properties": {
          "parent_orgs": {
            "type": "string",
            "description": "Names of parent organizations, comma seperated",
            "example": "Parent Org, Parent Org 2",
            "x-ballerina-name": "parentOrgs"
          },
          "contact_phone": {
            "type": "string",
            "description": "Phone number of the primary contact at the organization",
            "example": "(555) 111-5555",
            "x-ballerina-name": "contactPhone"
          },
          "city": {
            "type": "string",
            "description": "City of the organization's address",
            "example": "Chicago"
          },
          "lat_long": {
            "type": "string",
            "description": "latitude and longitude of the organization's adress",
            "example": "40.9052,-89.5866",
            "x-ballerina-name": "latLong"
          },
          "county": {
            "type": "string",
            "description": "County of the organization's address",
            "example": "Peoria, IL"
          },
          "ein": {
            "type": "string",
            "description": "Employer Identification Number",
            "example": "82-4267025"
          },
          "form_type": {
            "type": "string",
            "description": "Tax form filing type. ",
            "example": "990",
            "x-ballerina-name": "formType"
          },
          "form990_total_expenses": {
            "type": "string",
            "description": "Total expenses filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "22224499",
            "x-ballerina-name": "form990TotalExpenses"
          },
          "contact_email": {
            "type": "string",
            "description": "Email of the primary contact at the organization",
            "example": "help@orgname.org",
            "x-ballerina-name": "contactEmail"
          },
          "profile_level": {
            "type": "string",
            "description": "GuideStar seal levels",
            "example": "BRONZE",
            "enum": [
              "BRONZE",
              "SILVER",
              "GOLD",
              "PLATINUM",
              "NONE"
            ],
            "x-ballerina-name": "profileLevel"
          },
          "subsection_code": {
            "type": "string",
            "description": "IRS subsection code of the organization",
            "example": "501(c)(3) Public Charity",
            "x-ballerina-name": "subsectionCode"
          },
          "address_line_1": {
            "type": "string",
            "description": "Address line 1 of the organization",
            "example": "123 West 1st Street",
            "x-ballerina-name": "addressLine1"
          },
          "address_line_2": {
            "type": "string",
            "description": "Address line 2 of the organization",
            "example": "Suite 201",
            "x-ballerina-name": "addressLine2"
          },
          "state": {
            "type": "string",
            "description": "State (Abbreviation) of the organization's address",
            "example": "IL"
          },
          "form990_total_revenue": {
            "type": "string",
            "description": "Total revenue filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "2349999",
            "x-ballerina-name": "form990TotalRevenue"
          },
          "also_known_as": {
            "type": "string",
            "description": "Organization name Also Known As",
            "example": "chillicothe rugby football club",
            "x-ballerina-name": "alsoKnownAs"
          },
          "zip": {
            "type": "string",
            "description": "Zip code of the organization's address",
            "example": "23185"
          },
          "contact_name": {
            "type": "string",
            "description": "Name of the primary contact at the organization",
            "example": "John Smith",
            "x-ballerina-name": "contactName"
          },
          "public_report": {
            "type": "string",
            "description": "GuideStar's public profile URL",
            "example": "https://www.guidestar.org/profile/82-4267025",
            "x-ballerina-name": "publicReport"
          },
          "bmf_gross_receipts": {
            "type": "string",
            "description": "Gross receipts of the organization reported on the BMF",
            "example": "2349999",
            "x-ballerina-name": "bmfGrossReceipts"
          },
          "organization_name": {
            "type": "string",
            "description": "The public name recognized by the IRS",
            "example": "Illinois Youth Rugby Association",
            "x-ballerina-name": "organizationName"
          },
          "ntee_code": {
            "type": "string",
            "description": "National Taxonomy of Exempt Entities",
            "example": "N60 Amateur Sports Clubs, Leagues, N.E.C.",
            "x-ballerina-name": "nteeCode"
          },
          "mission": {
            "type": "string",
            "description": "Mission statement for the organization",
            "example": "To assist those in need"
          },
          "number_of_employees": {
            "type": "string",
            "description": "Number of employees at the organization",
            "example": "55",
            "x-ballerina-name": "numberOfEmployees"
          },
          "website_url": {
            "type": "string",
            "description": "URL for the organization's website",
            "example": "candid.org",
            "x-ballerina-name": "websiteUrl"
          },
          "organization_id": {
            "type": "string",
            "description": "A unique number identifying organizations and organizational entities",
            "example": "9938979",
            "x-ballerina-name": "organizationId"
          },
          "bridge_id": {
            "type": "string",
            "description": "Deprecated Bridge ID",
            "x-ballerina-name": "bridgeId",
            "example": null
          },
          "msa": {
            "type": "string",
            "description": "Metropolitan statistical area of the organization's adresss",
            "example": "IL - Peoria-Pekin"
          },
          "form990_total_assets": {
            "type": "string",
            "description": "Total assets filed on the most recent Form 990, 990-PF, or 990-EZ filing",
            "example": "12348855",
            "x-ballerina-name": "form990TotalAssets"
          },
          "contact_title": {
            "type": "string",
            "description": "Title of the primary contact at the organization",
            "example": "Support Lead",
            "x-ballerina-name": "contactTitle"
          },
          "foundation_code": {
            "type": "string",
            "description": "Foundation code that describes the organization",
            "example": "15",
            "x-ballerina-name": "foundationCode"
          },
          "properties": {
            "$ref": "#/components/schemas/V1EssentialsResponseDataProperties"
          },
          "bmf_assets": {
            "type": "string",
            "description": "Assets of the organization reported on the BMF",
            "example": "1849900",
            "x-ballerina-name": "bmfAssets"
          }
        }
      },
      "V3EssentialsResponse": {
        "type": "object",
        "properties": {
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V3EssentialsResponseHits"
            }
          },
          "took": {
            "type": "integer",
            "description": "Time taken for request to process",
            "example": 24
          },
          "code": {
            "type": "integer",
            "description": "Response Code",
            "example": 200
          },
          "results_count": {
            "type": "integer",
            "description": "Number of results returned by search",
            "example": 2541,
            "x-ballerina-name": "resultsCount"
          },
          "time": {
            "type": "string",
            "description": "Time of API call",
            "example": "2020-01-01T01:01:01:01.000Z"
          },
          "message": {
            "type": "string",
            "description": "Diagnostic message for response status",
            "example": "Request was processed successfully!"
          },
          "page_count": {
            "type": "integer",
            "description": "Number of pages returned by the search",
            "example": 67,
            "x-ballerina-name": "pageCount"
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "V1EssentialsResponseData": {
        "type": "object",
        "properties": {
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/V1EssentialsResponseDataHits"
            }
          },
          "took": {
            "type": "integer",
            "description": "Elapsed time to calculate results",
            "example": 22
          },
          "total_hits": {
            "type": "integer",
            "description": "Number of results returned by search",
            "example": 1,
            "x-ballerina-name": "totalHits"
          }
        }
      },
      "FinancialsFilter": {
        "type": "object",
        "properties": {
          "total_assets": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalAssets"
          },
          "total_revenue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalRevenue"
          },
          "total_expenses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "totalExpenses"
          }
        }
      },
      "EssentialsLookupResponse": {
        "type": "object",
        "properties": {
          "took": {
            "type": "integer",
            "description": "Time taken for request to process",
            "example": 20
          },
          "code": {
            "type": "integer",
            "description": "Response Code",
            "example": 200
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "field names and values",
              "example": "[\"ntee_minor\",\"msa_codes\",\"ntee_major\",\"subsections\",\"filing_type\",\"foundation_type\"]"
            }
          },
          "message": {
            "type": "string",
            "description": "Diagnostic message for response status",
            "example": "Request was processed successfully!"
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered",
            "example": [],
            "items": {
              "type": "string",
              "description": "error messaging"
            }
          }
        }
      },
      "Forbidden": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "403"
          },
          "message": {
            "type": "string",
            "example": "Forbidden, we found insufficient permissions to grant access to the resources. Please check the detailed message of the response."
          }
        }
      },
      "V3EssentialsResponseFinancials": {
        "type": "object",
        "properties": {
          "a_133_audit_performed": {
            "type": "boolean",
            "description": "Flag indicating the organization performed A-133 audit",
            "example": false,
            "x-ballerina-name": "a133AuditPerformed"
          },
          "required_to_file_990t": {
            "type": "boolean",
            "description": "Flag indicating the organization is required to file a 990-T",
            "example": false,
            "x-ballerina-name": "requiredToFile990t"
          },
          "bmf_gross_receipts": {
            "type": "number",
            "description": "Gross receipts of the organization reported on the BMF",
            "example": 2349999,
            "x-ballerina-name": "bmfGrossReceipts"
          },
          "most_recent_year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3EssentialsResponseFinancialsMostRecentYear"
              }
            ],
            "x-ballerina-name": "mostRecentYear"
          },
          "bmf_assets": {
            "type": "number",
            "description": "Assets of the organization reported on the BMF",
            "example": 1849900,
            "x-ballerina-name": "bmfAssets"
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "500"
          },
          "message": {
            "type": "string",
            "example": "Oh no!, this is bad, something went wrong... please contact API support!"
          }
        }
      },
      "V3EssentialsResponsePropertiesRelationshipDetails": {
        "type": "object",
        "properties": {
          "relationship_type": {
            "type": "string",
            "description": "Relationship type of organization",
            "example": "parent",
            "enum": [
              "parent",
              "subordinate"
            ],
            "x-ballerina-name": "relationshipType"
          },
          "organization_name": {
            "type": "string",
            "description": "Name of organization",
            "example": "Candid 2",
            "x-ballerina-name": "organizationName"
          },
          "ein": {
            "type": "string",
            "description": "Employer Identification Number",
            "example": "12-4566789"
          }
        },
        "description": "Organization's relation with other organizations"
      },
      "V3EssentialsResponseProperties": {
        "type": "object",
        "properties": {
          "bmf_status": {
            "type": "boolean",
            "description": "If the organization is present on the BMF",
            "example": false,
            "x-ballerina-name": "bmfStatus"
          },
          "defuncted_or_merged": {
            "type": "boolean",
            "description": "If the organization is defuncted or merged",
            "example": false,
            "x-ballerina-name": "defunctedOrMerged"
          },
          "relationship_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3EssentialsResponsePropertiesRelationshipType"
              }
            ],
            "x-ballerina-name": "relationshipType"
          },
          "relationship_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/V3EssentialsResponsePropertiesRelationshipDetails"
              }
            ],
            "x-ballerina-name": "relationshipDetails"
          },
          "pub78_verified": {
            "type": "boolean",
            "description": "If the organization is Pub78 verified",
            "example": false,
            "x-ballerina-name": "pub78Verified"
          },
          "allow_online_giving": {
            "type": "boolean",
            "description": "If the organization allows online giving",
            "example": true,
            "x-ballerina-name": "allowOnlineGiving"
          },
          "revoked": {
            "type": "boolean",
            "description": "If the organization is revoked",
            "example": false
          },
          "dei_submitted": {
            "type": "boolean",
            "description": "If the organization has submitted demographics information",
            "example": false,
            "x-ballerina-name": "deiSubmitted"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "401"
          },
          "message": {
            "type": "string",
            "example": "Access denied due to missing subscription key. Make sure to include subscription key when making requests to an API."
          }
        }
      },
      "V2EssentialsResponse": {
        "type": "object",
        "properties": {
          "took": {
            "type": "integer",
            "description": "Time taken for request to process",
            "example": 24
          },
          "code": {
            "type": "integer",
            "description": "Response Code",
            "example": 200
          },
          "data": {
            "$ref": "#/components/schemas/V2EssentialsResponseData"
          },
          "message": {
            "type": "string",
            "description": "Diagnostic message for response status",
            "example": "Request was processed successfully!"
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SpecificExclusionsFilter": {
        "type": "object",
        "properties": {
          "exclude_defunct_or_merged_organizations": {
            "type": "boolean",
            "description": "Flag to exclude defunct or merged organizations. Value set as true or false",
            "example": false,
            "x-ballerina-name": "excludeDefunctOrMergedOrganizations"
          },
          "exclude_revoked_organizations": {
            "type": "boolean",
            "description": "Flag to exclude revoked organizations. Value set as true or false",
            "example": false,
            "x-ballerina-name": "excludeRevokedOrganizations"
          }
        }
      },
      "V3EssentialsResponseFinancialsMostRecentYear": {
        "type": "object",
        "properties": {
          "total_assets": {
            "type": "number",
            "description": "Most recent year total assets",
            "example": 57426592,
            "x-ballerina-name": "totalAssets"
          },
          "fiscal_year": {
            "type": "number",
            "description": "Fiscal year of the most recent tax filing",
            "example": 2020,
            "x-ballerina-name": "fiscalYear"
          },
          "total_revenue": {
            "type": "number",
            "description": "Most recent year total revenue",
            "example": 2349999,
            "x-ballerina-name": "totalRevenue"
          },
          "form_types": {
            "type": "string",
            "description": "Tax form filing type",
            "example": "990",
            "x-ballerina-name": "formTypes"
          },
          "total_expenses": {
            "type": "number",
            "description": "Most recent year total expenses",
            "example": 22224499,
            "x-ballerina-name": "totalExpenses"
          }
        }
      },
      "V3EssentialsResponseTaxonomiesPopulationServedCodes": {
        "type": "object",
        "properties": {
          "population_served_description": {
            "type": "string",
            "description": "Description of Population served code",
            "example": "People with Physical Disabilities  ",
            "x-ballerina-name": "populationServedDescription"
          },
          "population_served_code": {
            "type": "string",
            "description": "Population served code",
            "example": "PG030000",
            "x-ballerina-name": "populationServedCode"
          }
        }
      },
      "V3Sort": {
        "type": "object",
        "properties": {
          "sort_by": {
            "type": "string",
            "description": "Leave blank to sort by relevance",
            "example": "organization_name",
            "enum": [
              "organization_name",
              "bmf_gross_receipts",
              "bmf_assets",
              "distance",
              "year_founded"
            ],
            "x-ballerina-name": "sortBy"
          },
          "sort_order": {
            "type": "string",
            "description": "Default value is ascending. Allowed values are \"asc\" (ascending) and \"desc\" (descending)",
            "example": "asc",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ballerina-name": "sortOrder"
          }
        }
      },
      "V1EssentialsResponse": {
        "type": "object",
        "properties": {
          "took": {
            "type": "integer",
            "description": "Time taken for request to process",
            "example": 24
          },
          "code": {
            "type": "integer",
            "description": "Response Code",
            "example": 200
          },
          "data": {
            "$ref": "#/components/schemas/V1EssentialsResponseData"
          },
          "message": {
            "type": "string",
            "description": "Diagnostic message for response status",
            "example": "Request was processed successfully!"
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "V3OrganizationFilter": {
        "type": "object",
        "properties": {
          "number_of_employees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "numberOfEmployees"
          },
          "ruling_year": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NumberRangeFilter"
              }
            ],
            "x-ballerina-name": "rulingYear"
          },
          "group_exemption": {
            "type": "array",
            "description": "Group exemption codes, comma separated",
            "items": {
              "type": "string",
              "example": "9334"
            },
            "x-ballerina-name": "groupExemption"
          },
          "profile_levels": {
            "type": "array",
            "description": "GuideStar seal levels, comma separated",
            "items": {
              "type": "string",
              "example": "platinum"
            },
            "enum": [
              "bronze",
              "silver",
              "gold",
              "platinum"
            ],
            "x-ballerina-name": "profileLevels"
          },
          "ntee_minor_codes": {
            "type": "array",
            "description": "National Taxonomy of Exempt Entities (NTEE) minor codes, comma separated",
            "items": {
              "type": "string",
              "example": "50"
            },
            "x-ballerina-name": "nteeMinorCodes"
          },
          "subsection_codes": {
            "type": "array",
            "description": "IRS subsection codes and/or descriptions, comma separated",
            "items": {
              "type": "string",
              "example": "501(c)(3) Public Charity"
            },
            "x-ballerina-name": "subsectionCodes"
          },
          "ntee_major_codes": {
            "type": "array",
            "description": "National Taxonomy of Exempt Entities (NTEE) major codes, comma separated",
            "items": {
              "type": "string",
              "example": "T"
            },
            "x-ballerina-name": "nteeMajorCodes"
          },
          "foundation_codes": {
            "type": "array",
            "description": "Foundation codes and/or descriptions, comma separated",
            "items": {
              "type": "string",
              "example": "15"
            },
            "x-ballerina-name": "foundationCodes"
          },
          "population_served_codes": {
            "type": "array",
            "description": "Population served codes, comma separated",
            "items": {
              "type": "string",
              "example": "PG0302"
            },
            "x-ballerina-name": "populationServedCodes"
          },
          "properties": {
            "$ref": "#/components/schemas/V3OrgProperties"
          },
          "subject_codes": {
            "type": "array",
            "description": "Subject codes, comma separated",
            "items": {
              "type": "string",
              "example": "SN04"
            },
            "x-ballerina-name": "subjectCodes"
          }
        }
      },
      "AuditsFilter": {
        "type": "object",
        "properties": {
          "a_133_audit_performed": {
            "type": "boolean",
            "description": "Flag indicating the organization performed A-133 audit. Value set as true or false",
            "example": false,
            "x-ballerina-name": "a133AuditPerformed"
          }
        }
      },
      "TooManyRequests": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "429"
          },
          "message": {
            "type": "string",
            "example": "Rate limit is exceeded. Try again later."
          }
        }
      },
      "V3EssentialsResponseTaxonomiesNteeCodes": {
        "type": "object",
        "properties": {
          "ntee_code_description": {
            "type": "string",
            "description": "Description of NTEE code",
            "example": "Humanities",
            "x-ballerina-name": "nteeCodeDescription"
          },
          "ntee_code": {
            "type": "string",
            "description": "National Taxonomy of Exempt Entities",
            "example": "A00",
            "x-ballerina-name": "nteeCode"
          }
        }
      },
      "EssentialsFilteredLookupResponseData": {
        "type": "object",
        "properties": {
          "search_value": {
            "type": "string",
            "description": "Value to pass in Essential's API filters",
            "example": "A_artsCulturesAndHumanities",
            "x-ballerina-name": "searchValue"
          },
          "value": {
            "type": "string",
            "description": "Text for the filter_name results",
            "example": "Arts, Culture, and Humanities"
          },
          "key": {
            "type": "string",
            "description": "Code for the filter_name results",
            "example": "A00"
          }
        },
        "description": "Key value pair for filter name, value, and search_value"
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "HTTP response status code",
            "example": "404"
          },
          "message": {
            "type": "string",
            "example": "Request was processed successfully but we could not find the resource ein"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Subscription-Key",
        "in": "header",
        "x-ballerina-name": "subscriptionKey"
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
